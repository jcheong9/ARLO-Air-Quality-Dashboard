{
  "openapi": "3.0.0",
  "info": {
    "description": "jameson",
    "version": "1.0.0",
    "title": "ARLO-Air-Quality-API",
    "contact": {
      "email": "jameson.cheong@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "ARLO-Air-Quality-API",
      "description": "RESTfulAPI for requesting and return air quality data from IOT devices"
    }
  ],
  "paths": {
    "/request": {
      "get": {
        "tags": [
          "dummy get request"
        ],
        "summary": "Returns Requests",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/dummyGetRequest"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dummy post Request"
        ],
        "summary": "Create a new request system",
        "requestBody": {
          "description": "Request Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dummyRequestPostBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/readings/device/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the device that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "device with id Request"
        ],
        "summary": "Get device request with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "device request w id",
            "schema": {
              "$ref": "#/components/schemas/device"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/dummy"
            }
          },
          "400": {
            "description": "Failed. Bad request."
          },
          "404": {
            "description": "Failed. The device is not found."
          }
        }
      }
    },
    "/device": {
      "parameters": [
        {
          "name": "device",
          "in": "path",
          "required": true,
          "description": "returns data associated to devices",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Devices Request"
        ],
        "summary": "Get devices request",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Devices Request id",
            "schema": {
              "$ref": "#/components/schemas/device"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/dummyGetRequest"
            }
          },
          "400": {
            "description": "Failed. Bad request."
          },
          "404": {
            "description": "Failed. The device is not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "device": {
        "type": "object",
        "properties": {
          "device1": {
            "name": "string",
            "id": "string",
            "location": "string",
            "gps": {
              "lat": "string",
              "long": "string"
            }
          }
        }
      }
    },
    "dummyRequestPostBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        }
      }
    },
    "dummyGetRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        }
      }
    }
  }
}